# Generated by Django 4.2.1 on 2023-07-12 04:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliate',
            fields=[
                ('affiliate_id_number', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name_affiliate', models.CharField(max_length=50)),
                ('affiliate_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('status_affiliate', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('DISABLED', 'DISABLED')], default='ACTIVE', max_length=20)),
                ('date_joined_affiliate', models.DateField(auto_now_add=True)),
                ('email_affiliate', models.EmailField(max_length=75)),
                ('phone_number_affiliate', models.CharField(max_length=20)),
                ('address_affiliate', models.CharField(max_length=100)),
                ('city_affiliate', models.CharField(max_length=100)),
                ('zip_code_affiliate', models.CharField(max_length=100)),
                ('bio_affiliate', models.TextField(max_length=500, null=True)),
                ('website_affiliate', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('event_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('IN PROGRESS', 'IN PROGRESS'), ('CANCELLED', 'CANCELLED'), ('POSTPONED', 'POSTPONED')], default='ACTIVE', max_length=25)),
                ('event_name', models.CharField(max_length=100, unique=True)),
                ('event_date_created', models.DateField(auto_now=True)),
                ('event_date', models.DateField()),
                ('event_start_time', models.TimeField(blank=True, null=True)),
                ('event_size', models.CharField(choices=[('10-50', 50), ('50-100', 100), ('100-200', 200), ('200-500', 500)], default='50-100', max_length=10)),
                ('event_location', models.CharField(max_length=100)),
                ('event_address', models.CharField(max_length=100)),
                ('event_city', models.CharField(blank=True, max_length=100, null=True)),
                ('event_zip', models.IntegerField(blank=True, null=True)),
                ('event_country', models.CharField(max_length=50, null=True)),
                ('event_state', models.CharField(max_length=30, null=True)),
                ('event_phone_number', models.CharField(max_length=20)),
                ('event_description', models.TextField(blank=True, max_length=100, null=True)),
                ('event_long_description', models.TextField(blank=True, max_length=512, null=True)),
                ('event_tshirts', models.BooleanField(default=False)),
                ('event_tshirts_price', models.FloatField(blank=True, default=0.0, null=True)),
                ('event_tshirt_image', models.ImageField(blank=True, null=True, upload_to='shirt-images')),
                ('event_type', models.TextField(choices=[('Individual', 'Individual'), ('Team', 'Team'), ('Coed', 'Coed')], default='Individual', max_length=20)),
                ('event_registration_date_open', models.DateField(blank=True, null=True)),
                ('event_registration_date_close', models.DateField(blank=True, null=True)),
                ('event_price_athlete', models.FloatField(default=0.0)),
                ('event_price_general', models.FloatField(default=0.0)),
                ('event_promo_code', models.BooleanField(default=False)),
                ('event_waiver', models.BooleanField(default=False)),
                ('event_waiver_document', models.FileField(blank=True, null=True, upload_to='')),
                ('event_prizes', models.BooleanField(default=False)),
                ('event_banner', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_vendors', models.BooleanField(default=False)),
                ('event_host_affiliate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='PlanIFYWOD.affiliate')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name_vendor', models.CharField(max_length=100)),
                ('vendor_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('vendor_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('DISABLED', 'DISABLED')], default='ACTIVE', max_length=25)),
                ('description_vendor', models.TextField(max_length=500)),
                ('email_vendor', models.EmailField(blank=True, max_length=75)),
                ('phone_number_vendor', models.CharField(blank=True, max_length=20)),
                ('address_vendor', models.CharField(blank=True, max_length=100)),
                ('city_vendor', models.CharField(blank=True, max_length=100)),
                ('zip_code_vendor', models.CharField(blank=True, max_length=100)),
                ('webiste_vendor', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('user_id_number', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('status_user', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('DISABLED', 'DISABLED')], default='ACTIVE', max_length=20)),
                ('gender_user', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=15)),
                ('date_joined_user', models.DateField(auto_now_add=True)),
                ('first_name_user', models.CharField(blank=True, max_length=25)),
                ('last_name_user', models.CharField(blank=True, max_length=25)),
                ('birthday_user', models.DateField(blank=True, null=True)),
                ('email_user', models.EmailField(blank=True, max_length=75)),
                ('phone_number_user', models.CharField(blank=True, max_length=20)),
                ('address_user', models.CharField(blank=True, max_length=100)),
                ('city_user', models.CharField(blank=True, max_length=100)),
                ('zip_code_user', models.CharField(blank=True, max_length=100)),
                ('host_user', models.BooleanField(blank=True, null=True)),
                ('host_user_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('athlete_user', models.BooleanField(blank=True, null=True)),
                ('athlete_user_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('vendor_user', models.BooleanField(blank=True, null=True)),
                ('vendor_user_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('user_bio', models.TextField(blank=True, max_length=250, null=True)),
                ('user_picture', models.ImageField(blank=True, null=True, upload_to='profile_img/')),
                ('username', models.OneToOneField(blank=True, db_column='username', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventWorkOut',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('workout_name', models.CharField(blank=True, max_length=50)),
                ('workout_type', models.CharField(choices=[('Every Minute On The Minute(EMOM)', 'EMOM'), ('As Many Reps As Possible (AMRAP)', 'AMRAP'), ('For Time', 'Time'), ('Tabata', 'Tabata')], max_length=50)),
                ('workout_description', models.TextField(blank=True, max_length=250, null=True)),
                ('workout_time', models.FloatField(blank=True, null=True)),
                ('workout_floater', models.BooleanField(default=False)),
                ('workout_demo', models.FileField(blank=True, null=True, upload_to='')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventVendor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.event')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='EventTeam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('team_name', models.CharField(max_length=50, unique=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventPrizes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=30)),
                ('prize_amount', models.FloatField(default=0.0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('event_join_date', models.DateField(auto_created=True)),
                ('participant', models.AutoField(primary_key=True, serialize=False)),
                ('first_name_of_participant', models.CharField(max_length=100, null=True)),
                ('last_name_of_participant', models.CharField(max_length=100, null=True)),
                ('birthday_of_participant', models.DateField(blank=True, null=True)),
                ('gender_of_participant', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=25, null=True)),
                ('email_of_participant', models.EmailField(max_length=100, null=True)),
                ('address_of_participant', models.CharField(max_length=50, null=True)),
                ('city_of_participant', models.CharField(max_length=50, null=True)),
                ('state_of_participant', models.CharField(max_length=2, null=True)),
                ('zip_code_of_participant', models.IntegerField(null=True)),
                ('role', models.CharField(choices=[('Athlete', 'Athlete'), ('Judge', 'Judge'), ('General', 'General')], max_length=15, null=True)),
                ('event_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.event')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.eventteam')),
                ('username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.useraccount')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='event_host_user',
            field=models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.CASCADE, to='PlanIFYWOD.useraccount'),
        ),
        migrations.CreateModel(
            name='AffiliateMember',
            fields=[
                ('row_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('approved_member', models.BooleanField(default=False)),
                ('date_requested_to_join', models.DateField(auto_now=True)),
                ('date_approved', models.DateField(auto_now=True)),
                ('first_name_of_member', models.ForeignKey(on_delete=django.db.models.expressions.Case, related_name='+', to='PlanIFYWOD.useraccount')),
                ('id_of_user', models.ForeignKey(on_delete=django.db.models.expressions.Case, related_name='+', to='PlanIFYWOD.useraccount')),
                ('last_name_of_member', models.ForeignKey(on_delete=django.db.models.expressions.Case, related_name='+', to='PlanIFYWOD.useraccount')),
                ('name_of_affiliate', models.ForeignKey(on_delete=django.db.models.expressions.Case, related_name='+', to='PlanIFYWOD.affiliate')),
            ],
        ),
    ]
